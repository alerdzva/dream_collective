{"ast":null,"code":"import { r as registerInstance, h } from './index-39969785.js';\nimport { isEmpty } from '@aws-amplify/core';\nimport { A as AuthState } from './auth-types-78df304e.js';\nimport { Auth } from '@aws-amplify/auth';\nimport './Translations-392acb9b.js';\nimport { N as NO_AUTH_MODULE_FOUND } from './constants-d1abe7de.js';\nimport { d as dispatchAuthStateChangeEvent } from './helpers-01ecf5f9.js';\n\nvar AmplifyFederatedButtons =\n/** @class */\nfunction () {\n  function AmplifyFederatedButtons(hostRef) {\n    registerInstance(this, hostRef);\n    /** The current authentication state. */\n\n    this.authState = AuthState.SignIn;\n    /** Federated credentials & configuration. */\n\n    this.federated = {};\n    /** Auth state change handler for this component\n     * e.g. SignIn -> 'Create Account' link -> SignUp\n     */\n\n    this.handleAuthStateChange = dispatchAuthStateChangeEvent;\n  }\n\n  AmplifyFederatedButtons.prototype.componentWillLoad = function () {\n    if (!Auth || typeof Auth.configure !== 'function') {\n      throw new Error(NO_AUTH_MODULE_FOUND);\n    }\n\n    var _a = Auth.configure().oauth,\n        oauth = _a === void 0 ? {} : _a; // backward compatibility\n\n    if (oauth['domain']) {\n      this.federated.oauthConfig = Object.assign(Object.assign({}, this.federated.oauthConfig), oauth);\n    } else if (oauth['awsCognito']) {\n      this.federated.oauthConfig = Object.assign(Object.assign({}, this.federated.oauthConfig), oauth['awsCognito']);\n    }\n\n    if (oauth['auth0']) {\n      this.federated.auth0Config = Object.assign(Object.assign({}, this.federated.auth0Config), oauth['auth0']);\n    }\n  };\n\n  AmplifyFederatedButtons.prototype.render = function () {\n    if (!Object.values(AuthState).includes(this.authState)) {\n      return null;\n    }\n\n    if (isEmpty(this.federated)) {\n      return null;\n    }\n\n    var _a = this.federated,\n        amazonClientId = _a.amazonClientId,\n        auth0Config = _a.auth0Config,\n        facebookAppId = _a.facebookAppId,\n        googleClientId = _a.googleClientId,\n        oauthConfig = _a.oauthConfig;\n    return h(\"div\", null, googleClientId && h(\"div\", null, h(\"amplify-google-button\", {\n      clientId: googleClientId,\n      handleAuthStateChange: this.handleAuthStateChange\n    })), facebookAppId && h(\"div\", null, h(\"amplify-facebook-button\", {\n      appId: facebookAppId,\n      handleAuthStateChange: this.handleAuthStateChange\n    })), amazonClientId && h(\"div\", null, h(\"amplify-amazon-button\", {\n      clientId: amazonClientId,\n      handleAuthStateChange: this.handleAuthStateChange\n    })), oauthConfig && h(\"div\", null, h(\"amplify-oauth-button\", {\n      config: oauthConfig\n    })), auth0Config && h(\"div\", null, h(\"amplify-auth0-button\", {\n      config: auth0Config,\n      handleAuthStateChange: this.handleAuthStateChange\n    })));\n  };\n\n  return AmplifyFederatedButtons;\n}();\n\nvar amplifyStrikeCss = \".sc-amplify-strike-h{--color:var(--amplify-grey);--border-color:var(--amplify-light-grey);--content-background:var(--amplify-white);display:block;width:100%;text-align:center;border-bottom:1px solid var(--border-color);line-height:0.1em;margin:32px 0;color:var(--color)}.strike-content.sc-amplify-strike{background:var(--content-background);padding:0 25px;font-size:var(--amplify-text-sm);font-weight:500}\";\n\nvar AmplifyStrike =\n/** @class */\nfunction () {\n  function AmplifyStrike(hostRef) {\n    registerInstance(this, hostRef);\n  }\n\n  AmplifyStrike.prototype.render = function () {\n    return h(\"span\", {\n      class: \"strike-content\"\n    }, h(\"slot\", null));\n  };\n\n  return AmplifyStrike;\n}();\n\nAmplifyStrike.style = amplifyStrikeCss;\nexport { AmplifyFederatedButtons as amplify_federated_buttons, AmplifyStrike as amplify_strike };","map":null,"metadata":{},"sourceType":"module"}