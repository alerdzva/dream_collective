{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/piyum/Desktop/tempfolder/frontend_dreamcollective/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/piyum/Desktop/tempfolder/frontend_dreamcollective/src/components/LoadingWidget.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  width:\", \"vw;\\n  height:\", \"vw;\\n  background-color:\", \";\\n  border-radius:5vw;\\n\\n  @media \", \" {\\n    width:\", \"vw;\\n    height:\", \"vw;\\n  }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 15vw;\\n  height: 2vw;\\n  margin:50vh auto;\\n  display:flex;\\n  justify-content:space-around;\\n\\n  @media \", \" {\\n    width: 30vw;\\n    height: 3vw;\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { theme } from \"../colorTheme\";\nimport { devices } from \"../devices.js\";\nconst DotWrapper = styled.div(_templateObject(), devices.mobile);\nconst Dot = styled.div(_templateObject2(), props => props.selected ? 1.1 : 1, props => props.selected ? 1.1 : 1, props => props.selected ? theme.primaryColor : '#DCDCDC', devices.mobile, props => props.selected ? 2.2 : 2, props => props.selected ? 2.2 : 2);\nvar intervelRef;\nconst DOT_COUNT = 5;\nexport default class LoadingWidget extends Component {\n  constructor(props) {\n    super(props);\n\n    this.runLoadingWidgetSequence = () => {\n      var index = this.state.index;\n      index++;\n\n      if (index > DOT_COUNT) {\n        index = 0;\n      }\n\n      this.setState({\n        index: index\n      }); //else (clearInterval(intervelRef))\n    };\n\n    this.state = {\n      index: 0\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      index: 0\n    });\n    intervelRef = setInterval(this.runLoadingWidgetSequence, 400);\n  }\n\n  render() {\n    return React.createElement(DotWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.renderLoadingWidgetDots());\n    return null;\n  }\n\n  renderLoadingWidgetDots() {\n    let dots = [];\n    let selected = false;\n    let index = this.state.index;\n\n    for (let i = 0; i < DOT_COUNT; i++) {\n      selected = i == index;\n      dots.push(React.createElement(Dot, {\n        selected: selected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }));\n    }\n\n    return dots;\n  }\n\n}","map":{"version":3,"sources":["/Users/piyum/Desktop/tempfolder/frontend_dreamcollective/src/components/LoadingWidget.js"],"names":["React","Component","styled","theme","devices","DotWrapper","div","mobile","Dot","props","selected","primaryColor","intervelRef","DOT_COUNT","LoadingWidget","constructor","runLoadingWidgetSequence","index","state","setState","componentDidMount","setInterval","render","renderLoadingWidgetDots","dots","i","push"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,KAAR,QAAoB,eAApB;AACA,SAAQC,OAAR,QAAsB,eAAtB;AAIA,MAAMC,UAAU,GAAGH,MAAM,CAACI,GAAV,oBAOLF,OAAO,CAACG,MAPH,CAAhB;AAaA,MAAMC,GAAG,GAAGN,MAAM,CAACI,GAAV,qBACCG,KAAK,IAAIA,KAAK,CAACC,QAAN,GAAiB,GAAjB,GAAuB,CADjC,EAEED,KAAK,IAAIA,KAAK,CAACC,QAAN,GAAiB,GAAjB,GAAuB,CAFlC,EAGYD,KAAK,IAAIA,KAAK,CAACC,QAAN,GAAiBP,KAAK,CAACQ,YAAvB,GAAsC,SAH3D,EAMEP,OAAO,CAACG,MANV,EAOGE,KAAK,IAAIA,KAAK,CAACC,QAAN,GAAiB,GAAjB,GAAuB,CAPnC,EAQID,KAAK,IAAIA,KAAK,CAACC,QAAN,GAAiB,GAAjB,GAAuB,CARpC,CAAT;AAeA,IAAIE,WAAJ;AACA,MAAMC,SAAS,GAAG,CAAlB;AAGA,eAAe,MAAMC,aAAN,SAA4Bb,SAA5B,CAAsC;AACnDc,EAAAA,WAAW,CAACN,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAanBO,wBAbmB,GAaQ,MAAM;AAC/B,UAAIC,KAAK,GAAG,KAAKC,KAAL,CAAWD,KAAvB;AACAA,MAAAA,KAAK;;AACL,UAAIA,KAAK,GAAGJ,SAAZ,EAAuB;AACrBI,QAAAA,KAAK,GAAG,CAAR;AACD;;AACD,WAAKE,QAAL,CAAc;AAAEF,QAAAA,KAAK,EAAEA;AAAT,OAAd,EAN+B,CAO/B;AACD,KArBkB;;AAEjB,SAAKC,KAAL,GAAa;AACXD,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAGDG,EAAAA,iBAAiB,GAAG;AAClB,SAAKD,QAAL,CAAc;AAAEF,MAAAA,KAAK,EAAE;AAAT,KAAd;AACAL,IAAAA,WAAW,GAAGS,WAAW,CAAC,KAAKL,wBAAN,EAAgC,GAAhC,CAAzB;AACD;;AAYDM,EAAAA,MAAM,GAAG;AACP,WAEI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,uBAAL,EADH,CAFJ;AAOA,WAAO,IAAP;AACD;;AAEDA,EAAAA,uBAAuB,GAAG;AACxB,QAAIC,IAAI,GAAG,EAAX;AACA,QAAId,QAAQ,GAAG,KAAf;AACA,QAAIO,KAAK,GAAG,KAAKC,KAAL,CAAWD,KAAvB;;AACA,SAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,SAApB,EAA+BY,CAAC,EAAhC,EAAoC;AAClCf,MAAAA,QAAQ,GAAGe,CAAC,IAAIR,KAAhB;AACAO,MAAAA,IAAI,CAACE,IAAL,CAAU,oBAAC,GAAD;AAAK,QAAA,QAAQ,EAAEhB,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAV;AACD;;AACD,WAAOc,IAAP;AACD;;AA5CkD","sourcesContent":["import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport {theme} from \"../colorTheme\";\nimport {devices} from \"../devices.js\"\n\n\n\nconst DotWrapper = styled.div`\n  width: 15vw;\n  height: 2vw;\n  margin:50vh auto;\n  display:flex;\n  justify-content:space-around;\n\n  @media ${devices.mobile} {\n    width: 30vw;\n    height: 3vw;\n  }\n`;\n\nconst Dot = styled.div`\n  width:${props => props.selected ? 1.1 : 1}vw;\n  height:${props => props.selected ? 1.1 : 1}vw;\n  background-color:${props => props.selected ? theme.primaryColor : '#DCDCDC'};\n  border-radius:5vw;\n\n  @media ${devices.mobile} {\n    width:${props => props.selected ? 2.2 : 2}vw;\n    height:${props => props.selected ? 2.2 : 2}vw;\n  }\n`;\n\n\n\n\nvar intervelRef;\nconst DOT_COUNT = 5;\n\n\nexport default class LoadingWidget extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      index: 0\n    };\n  }\n\n\n  componentDidMount() {\n    this.setState({ index: 0 });\n    intervelRef = setInterval(this.runLoadingWidgetSequence, 400)\n  }\n  \n  runLoadingWidgetSequence = () => {\n    var index = this.state.index;\n    index++;\n    if (index > DOT_COUNT) {\n      index = 0;\n    }\n    this.setState({ index: index });\n    //else (clearInterval(intervelRef))\n  }\n\n  render() {\n    return (\n\n        <DotWrapper>\n          {this.renderLoadingWidgetDots()}\n        </DotWrapper>\n\n    )\n    return null;\n  }\n\n  renderLoadingWidgetDots() {\n    let dots = []\n    let selected = false;\n    let index = this.state.index;\n    for (let i = 0; i < DOT_COUNT; i++) {\n      selected = i == index;\n      dots.push(<Dot selected={selected}></Dot>)\n    }\n    return dots;\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}