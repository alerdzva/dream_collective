{"ast":null,"code":"export function createNewTopic(topic, callback) {\n  fetch(\"/topics/\", {\n    method: \"POST\",\n    body: JSON.stringify(topic),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n      Mode: \"CORS\"\n    }\n  }).then(response => response.json()).then(data => {\n    callback(data);\n  });\n}\nexport function updateTopic(id, topic, callback) {\n  fetch(\"/topics/\" + id, {\n    method: \"PUT\",\n    body: JSON.stringify(topic),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n      Mode: \"CORS\"\n    }\n  }).then(response => response.json()).then(data => {\n    callback(data);\n  });\n}\nexport function readTopic(id, callback) {\n  fetch(\"/topics/\" + id, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n      Mode: \"CORS\"\n    }\n  }).then(response => response.json()).then(data => {\n    callback(data);\n  });\n}\nexport function readAllTopics(callback) {\n  fetch(\"/topics/\", {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n      Mode: \"CORS\"\n    }\n  }).then(response => response.json()).then(data => {\n    callback(data);\n  });\n}\nexport function createNewFeature(feature, callback) {\n  fetch(\"/features/\", {\n    method: \"POST\",\n    body: JSON.stringify(feature),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n      Mode: \"CORS\"\n    }\n  }).then(response => response.json()).then(data => {\n    callback(data);\n  });\n}\nexport function readFeaturesOfTopic(topicId, callback) {\n  fetch(\"/features/topic/\" + topicId, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n      Mode: \"CORS\"\n    }\n  }).then(response => response.json()).then(data => {\n    callback(data);\n  });\n}\nexport function createNewPrompt(prompt, callback) {\n  fetch(\"/prompts/\", {\n    method: \"POST\",\n    body: JSON.stringify(prompt),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n      Mode: \"CORS\"\n    }\n  }).then(response => response.json()).then(data => {\n    callback(data);\n  });\n}\nexport function readPromptsOfTopic(topicId, callback) {\n  fetch(\"/prompts/topic/\" + topicId, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n      Mode: \"CORS\"\n    }\n  }).then(response => response.json()).then(data => {\n    callback(data);\n  });\n}\nexport function createNewResponse(response, callback) {\n  fetch(\"/responses/\", {\n    method: \"POST\",\n    body: JSON.stringify(response),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n      Mode: \"CORS\"\n    }\n  }).then(response => response.json()).then(data => {\n    callback(data);\n  });\n}\nexport function readResponse(id, callback) {\n  fetch(\"/responses/\" + id, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n      Mode: \"CORS\"\n    }\n  }).then(response => response.json()).then(data => {\n    callback(data);\n  });\n}\nexport function readResponsesOfTopic(topicId, callback) {\n  fetch(\"/responses/topic/\" + topicId, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n      Mode: \"CORS\"\n    }\n  }).then(response => response.json()).then(data => {\n    callback(data);\n  });\n}\nexport function createNewUser(user, callback) {\n  fetch(\"/users/\", {\n    method: \"POST\",\n    body: JSON.stringify(user),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n      Mode: \"CORS\"\n    }\n  }).then(response => response.json()).then(data => {\n    callback(data);\n  });\n}\nexport function readUserByCognitoUsername(cognitoUsername, callback) {\n  fetch(\"/users/cognito/\" + cognitoUsername, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n      Mode: \"CORS\"\n    }\n  }).then(response => response.json()).then(data => {\n    callback(data);\n  });\n}\nexport function updateUser(id, user, callback) {\n  fetch(\"/users/\" + id, {\n    method: \"PUT\",\n    body: JSON.stringify(user),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n      Mode: \"CORS\"\n    }\n  }).then(response => response.json()).then(data => {\n    callback(data);\n  });\n}","map":{"version":3,"sources":["/Users/piyum/Desktop/tempfolder/frontend_dreamcollective/src/utils/APICalls.js"],"names":["createNewTopic","topic","callback","fetch","method","body","JSON","stringify","headers","Accept","Mode","then","response","json","data","updateTopic","id","readTopic","readAllTopics","createNewFeature","feature","readFeaturesOfTopic","topicId","createNewPrompt","prompt","readPromptsOfTopic","createNewResponse","readResponse","readResponsesOfTopic","createNewUser","user","readUserByCognitoUsername","cognitoUsername","updateUser"],"mappings":"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","sourcesContent":["export function createNewTopic(topic, callback) {\n  fetch(\"/topics/\", {\n    method: \"POST\",\n    body: JSON.stringify(topic),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n      Mode: \"CORS\",\n    },\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      callback(data);\n    });\n}\n\nexport function updateTopic(id, topic, callback) {\n  fetch(\"/topics/\" + id, {\n    method: \"PUT\",\n    body: JSON.stringify(topic),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n      Mode: \"CORS\",\n    },\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      callback(data);\n    });\n}\n\nexport function readTopic(id, callback) {\n  fetch(\"/topics/\" + id, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n      Mode: \"CORS\",\n    },\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      callback(data);\n    });\n}\n\nexport function readAllTopics(callback) {\n  fetch(\"/topics/\", {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n      Mode: \"CORS\",\n    },\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      callback(data);\n    });\n}\n\nexport function createNewFeature(feature, callback) {\n  fetch(\"/features/\", {\n    method: \"POST\",\n    body: JSON.stringify(feature),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n      Mode: \"CORS\",\n    },\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      callback(data);\n    });\n}\n\nexport function readFeaturesOfTopic(topicId, callback) {\n  fetch(\"/features/topic/\" + topicId, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n      Mode: \"CORS\",\n    },\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      callback(data);\n    });\n}\n\nexport function createNewPrompt(prompt, callback) {\n  fetch(\"/prompts/\", {\n    method: \"POST\",\n    body: JSON.stringify(prompt),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n      Mode: \"CORS\",\n    },\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      callback(data);\n    });\n}\n\nexport function readPromptsOfTopic(topicId, callback) {\n  fetch(\"/prompts/topic/\" + topicId, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n      Mode: \"CORS\",\n    },\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      callback(data);\n    });\n}\n\nexport function createNewResponse(response, callback) {\n  fetch(\"/responses/\", {\n    method: \"POST\",\n    body: JSON.stringify(response),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n      Mode: \"CORS\",\n    },\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      callback(data);\n    });\n}\n\nexport function readResponse(id, callback) {\n  fetch(\"/responses/\" + id, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n      Mode: \"CORS\",\n    },\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      callback(data);\n    });\n}\n\nexport function readResponsesOfTopic(topicId, callback) {\n  fetch(\"/responses/topic/\" + topicId, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n      Mode: \"CORS\",\n    },\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      callback(data);\n    });\n}\n\nexport function createNewUser(user, callback) {\n  fetch(\"/users/\", {\n    method: \"POST\",\n    body: JSON.stringify(user),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n      Mode: \"CORS\",\n    },\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      callback(data);\n    });\n}\n\nexport function readUserByCognitoUsername(cognitoUsername, callback) {\n  fetch(\"/users/cognito/\" + cognitoUsername, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n      Mode: \"CORS\",\n    },\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      callback(data);\n    });\n}\n\nexport function updateUser(id, user, callback) {\n  fetch(\"/users/\" + id, {\n    method: \"PUT\",\n    body: JSON.stringify(user),\n    headers: {\n      Accept: \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\",\n      Mode: \"CORS\",\n    },\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      callback(data);\n    });\n}\n"]},"metadata":{},"sourceType":"module"}