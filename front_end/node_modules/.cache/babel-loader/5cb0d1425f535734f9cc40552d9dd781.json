{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/piyum/Desktop/tempfolder/frontend_dreamcollective/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/piyum/Desktop/tempfolder/frontend_dreamcollective/src/components/views/createTopic/SetupPromptsView.js\";\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 70%;\\n  margin: 3vw 0;\\n  font-size: \", \";\\n  font-family: \\\"Roboto\\\", serif;\\n  font-weight: \", \";\\n  color: \", \";\\n  width: 100%;\\n  text-align: left;\\n  background-color: \", \";\\n  padding: 3vw 2vw;\\n  transition: transform 0.2s;\\n  cursor: pointer;\\n\\n  &:hover {\\n    transform: scale(1.02);\\n  }\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  margin: auto;\\n  display: flex;\\n  width: 70%;\\n  justify-content: space-between;\\n  margin-top: 3vw;\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  margin: 5vw auto;\\n  position: relative;\\n  width: 90vw;\\n\\n  @media \", \" {\\n    flex-direction: column;\\n    height: auto;\\n  }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  position: relative;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport styled, { ThemeConsumer } from \"styled-components\";\nimport LoadingWidget from \"../../LoadingWidget\";\nimport { devices } from \"../../../devices.js\";\nimport Header from \"../../commons/header/Header\";\nimport { theme } from \"../../../config/colorTheme\";\nimport Prompt from \"../../commons/Prompt\";\nimport TextArea from \"../../commons/TextArea\";\nimport Category from \"./Category\";\nimport Footer from \"../../commons/Footer\";\nimport NewFeature from \"../../feature/NewFeature\";\nimport NewPrompt from \"./NewPrompt\";\nimport Text from \"../../commons/Text\";\nimport Hero from \"../../commons/Hero\";\nimport userInfoForm from \"../../userinfo/UserInfoForm\";\nimport UserInfoForm from \"../../userinfo/UserInfoForm\";\nconst Wrapper = styled.div(_templateObject());\nconst ContentWrapper = styled.div(_templateObject2(), devices.mobile);\nconst FeatureContainer = styled.div(_templateObject3());\nconst AddNewPrompt = styled.div(_templateObject4(), props => props.isSmall ? \"1.2vw\" : \"2vw\", props => props.isSmall ? \"300\" : \"700\", props => props.isDisabled ? theme.darkGray : theme.black, theme.lightGray);\nconst categories = [\"product\", \"space\", \"service\"];\n\nvar APICalls = require(\"../../../utils/APICalls\");\n\nclass SetupPromptsView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      topic: null,\n      prompts: [{\n        text: \"\",\n        startingLine: \"\",\n        showDialog: false\n      }]\n    };\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    APICalls.readTopic(this.props.match.params.id, data => this.setState({\n      topic: data\n    }));\n  }\n\n  render() {\n    if (this.state.topic == null) return React.createElement(LoadingWidget, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    });\n    const mainHelp = React.createElement(Text, {\n      text: \"Encourage participants to tell you a story on how they see this dream \" + this.state.topic.name + \" being used. What do you want them to tell you about their creations? Is it to be used by a specific person or group of people and in what context? What does \" + this.state.topic.name + \"enable them to do?\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    });\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, this.state.showDialog && React.createElement(UserInfoForm, {\n      onClose: () => {\n        this.props.history.push(\"/topic/\" + this.state.topic._id);\n        this.setState({\n          showDialog: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(Hero, {\n      isSmall: true,\n      onClick: () => this.props.history.push(\"../../\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(Header, {\n      text: \"Create prompts for people to tell you about their dream \" + this.state.topic.name,\n      helpBody: mainHelp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(ContentWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, this.state.prompts.map((item, key) => React.createElement(NewPrompt, {\n      index: key,\n      topicName: this.state.topic.name,\n      promptText: item.text,\n      startingLine: item.startingLine,\n      onPromptChange: (i, prompt) => this.handlePromptChange(i, prompt),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })), React.createElement(AddNewPrompt, {\n      onClick: () => this.addNewPrompt(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \" \", \"+ Add another prompt\")), this.state.prompts[0].text.length > 5 && React.createElement(Footer, {\n      onDoneCallback: () => this.handlePublish(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }));\n  }\n\n  handlePublish() {\n    this.state.prompts.map((value, index) => {\n      APICalls.createNewPrompt({\n        topic: this.state.topic._id,\n        text: value.text,\n        startingLine: value.startingLine\n      }, data => console.log(data));\n    });\n    var topic = this.state.topic;\n    topic.isPublished = true;\n    APICalls.updateTopic(topic._id, topic, data => {\n      alert(\"Project published!\");\n      this.setState({\n        showDialog: true\n      }); // this.props.history.push(\"/topic/\" + this.state.topic._id);\n    });\n  }\n\n  addNewPrompt() {\n    var prompts = this.state.prompts;\n    prompts.push({\n      text: \"\",\n      startingLine: \"\"\n    });\n    this.setState({\n      prompts: prompts\n    });\n  }\n\n  handlePromptChange(i, prompt) {\n    var prompts = this.state.prompts;\n    prompts[i] = prompt;\n    this.setState(prompts);\n  }\n\n}\n\nexport default SetupPromptsView;","map":{"version":3,"sources":["/Users/piyum/Desktop/tempfolder/frontend_dreamcollective/src/components/views/createTopic/SetupPromptsView.js"],"names":["React","Component","styled","ThemeConsumer","LoadingWidget","devices","Header","theme","Prompt","TextArea","Category","Footer","NewFeature","NewPrompt","Text","Hero","userInfoForm","UserInfoForm","Wrapper","div","ContentWrapper","mobile","FeatureContainer","AddNewPrompt","props","isSmall","isDisabled","darkGray","black","lightGray","categories","APICalls","require","SetupPromptsView","constructor","state","topic","prompts","text","startingLine","showDialog","componentDidMount","window","scrollTo","readTopic","match","params","id","data","setState","render","mainHelp","name","history","push","_id","map","item","key","i","prompt","handlePromptChange","addNewPrompt","length","handlePublish","value","index","createNewPrompt","console","log","isPublished","updateTopic","alert"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport styled, { ThemeConsumer } from \"styled-components\";\nimport LoadingWidget from \"../../LoadingWidget\";\nimport { devices } from \"../../../devices.js\";\nimport Header from \"../../commons/header/Header\";\nimport { theme } from \"../../../config/colorTheme\";\nimport Prompt from \"../../commons/Prompt\";\nimport TextArea from \"../../commons/TextArea\";\nimport Category from \"./Category\";\nimport Footer from \"../../commons/Footer\";\nimport NewFeature from \"../../feature/NewFeature\";\nimport NewPrompt from \"./NewPrompt\";\nimport Text from \"../../commons/Text\";\nimport Hero from \"../../commons/Hero\";\nimport userInfoForm from \"../../userinfo/UserInfoForm\";\nimport UserInfoForm from \"../../userinfo/UserInfoForm\";\n\nconst Wrapper = styled.div`\n  width: 100%;\n  position: relative;\n`;\n\nconst ContentWrapper = styled.div`\n  margin: 5vw auto;\n  position: relative;\n  width: 90vw;\n\n  @media ${devices.mobile} {\n    flex-direction: column;\n    height: auto;\n  }\n`;\n\nconst FeatureContainer = styled.div`\n  margin: auto;\n  display: flex;\n  width: 70%;\n  justify-content: space-between;\n  margin-top: 3vw;\n`;\n\nconst AddNewPrompt = styled.div`\n  width: 70%;\n  margin: 3vw 0;\n  font-size: ${(props) => (props.isSmall ? \"1.2vw\" : \"2vw\")};\n  font-family: \"Roboto\", serif;\n  font-weight: ${(props) => (props.isSmall ? \"300\" : \"700\")};\n  color: ${(props) => (props.isDisabled ? theme.darkGray : theme.black)};\n  width: 100%;\n  text-align: left;\n  background-color: ${theme.lightGray};\n  padding: 3vw 2vw;\n  transition: transform 0.2s;\n  cursor: pointer;\n\n  &:hover {\n    transform: scale(1.02);\n  }\n`;\n\nconst categories = [\"product\", \"space\", \"service\"];\n\nvar APICalls = require(\"../../../utils/APICalls\");\n\nclass SetupPromptsView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      topic: null,\n      prompts: [\n        {\n          text: \"\",\n          startingLine: \"\",\n          showDialog: false,\n        },\n      ],\n    };\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    APICalls.readTopic(this.props.match.params.id, (data) =>\n      this.setState({ topic: data })\n    );\n  }\n\n  render() {\n    if (this.state.topic == null) return <LoadingWidget></LoadingWidget>;\n\n    const mainHelp = (\n      <Text\n        text={\n          \"Encourage participants to tell you a story on how they see this dream \" +\n          this.state.topic.name +\n          \" being used. What do you want them to tell you about their creations? Is it to be used by a specific person or group of people and in what context? What does \" +\n          this.state.topic.name +\n          \"enable them to do?\"\n        }\n      ></Text>\n    );\n\n    return (\n      <Wrapper>\n        {this.state.showDialog && (\n          <UserInfoForm\n            onClose={() => {\n              this.props.history.push(\"/topic/\" + this.state.topic._id);\n              this.setState({ showDialog: false });\n            }}\n          ></UserInfoForm>\n        )}\n        <Hero\n          isSmall={true}\n          onClick={() => this.props.history.push(\"../../\")}\n        ></Hero>\n\n        <Header\n          text={\n            \"Create prompts for people to tell you about their dream \" +\n            this.state.topic.name\n          }\n          helpBody={mainHelp}\n        ></Header>\n        <ContentWrapper>\n          {this.state.prompts.map((item, key) => (\n            <NewPrompt\n              index={key}\n              topicName={this.state.topic.name}\n              promptText={item.text}\n              startingLine={item.startingLine}\n              onPromptChange={(i, prompt) => this.handlePromptChange(i, prompt)}\n            ></NewPrompt>\n          ))}\n          <AddNewPrompt onClick={() => this.addNewPrompt()}>\n            {\" \"}\n            + Add another prompt\n          </AddNewPrompt>\n        </ContentWrapper>\n        {this.state.prompts[0].text.length > 5 && (\n          <Footer onDoneCallback={() => this.handlePublish()}></Footer>\n        )}\n      </Wrapper>\n    );\n  }\n\n  handlePublish() {\n    this.state.prompts.map((value, index) => {\n      APICalls.createNewPrompt(\n        {\n          topic: this.state.topic._id,\n          text: value.text,\n          startingLine: value.startingLine,\n        },\n        (data) => console.log(data)\n      );\n    });\n\n    var topic = this.state.topic;\n    topic.isPublished = true;\n    APICalls.updateTopic(topic._id, topic, (data) => {\n      alert(\"Project published!\");\n      this.setState({ showDialog: true });\n      // this.props.history.push(\"/topic/\" + this.state.topic._id);\n    });\n  }\n\n  addNewPrompt() {\n    var prompts = this.state.prompts;\n    prompts.push({ text: \"\", startingLine: \"\" });\n    this.setState({ prompts: prompts });\n  }\n\n  handlePromptChange(i, prompt) {\n    var prompts = this.state.prompts;\n    prompts[i] = prompt;\n    this.setState(prompts);\n  }\n}\n\nexport default SetupPromptsView;\n"]},"metadata":{},"sourceType":"module"}