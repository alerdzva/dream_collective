{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport { attachEventProps, createForwardRef, dashToPascalCase, isCoveredByReact } from './utils/index';\nexport var createReactComponent = function (tagName) {\n  var displayName = dashToPascalCase(tagName);\n\n  var ReactComponent =\n  /** @class */\n  function (_super) {\n    __extends(class_1, _super);\n\n    function class_1(props) {\n      var _this = _super.call(this, props) || this;\n\n      _this.ref = React.createRef();\n      return _this;\n    }\n\n    class_1.prototype.componentDidMount = function () {\n      this.componentDidUpdate(this.props);\n    };\n\n    class_1.prototype.componentDidUpdate = function (prevProps) {\n      var node = this.ref.current;\n      attachEventProps(node, this.props, prevProps);\n    };\n\n    class_1.prototype.render = function () {\n      var _a = this.props,\n          children = _a.children,\n          forwardedRef = _a.forwardedRef,\n          style = _a.style,\n          className = _a.className,\n          ref = _a.ref,\n          cProps = __rest(_a, [\"children\", \"forwardedRef\", \"style\", \"className\", \"ref\"]);\n\n      var propsToPass = Object.keys(cProps).reduce(function (acc, name) {\n        var isEventProp = name.indexOf('on') === 0 && name[2] === name[2].toUpperCase();\n        var isDataProp = name.indexOf('data-') === 0;\n        var isAriaProp = name.indexOf('aria-') === 0;\n\n        if (isEventProp) {\n          var eventName = name.substring(2).toLowerCase();\n\n          if (typeof document !== \"undefined\" && isCoveredByReact(eventName)) {\n            acc[name] = cProps[name];\n          }\n        } else if (isDataProp || isAriaProp) {\n          acc[name] = cProps[name];\n        }\n\n        return acc;\n      }, {});\n\n      var newProps = __assign(__assign({}, propsToPass), {\n        ref: this.ref,\n        style: style,\n        className: className\n      });\n\n      return React.createElement(tagName, newProps, children);\n    };\n\n    Object.defineProperty(class_1, \"displayName\", {\n      get: function () {\n        return displayName;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return class_1;\n  }(React.Component);\n\n  return createForwardRef(ReactComponent, displayName);\n};","map":null,"metadata":{},"sourceType":"module"}