{"ast":null,"code":"import _slicedToArray from \"/Users/piyum/Desktop/tempfolder/frontend_dreamcollective/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/piyum/Desktop/tempfolder/frontend_dreamcollective/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/piyum/Desktop/tempfolder/frontend_dreamcollective/src/components/views/createTopic/NewPrompt.js\";\n\nfunction _templateObject7() {\n  const data = _taggedTemplateLiteral([\"\\nwidth:10%;\\n\"]);\n\n  _templateObject7 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  const data = _taggedTemplateLiteral([\"\\nwidth:90%;\\n\"]);\n\n  _templateObject6 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\nwidth:100%;\\nposition:relative;\\n\"]);\n\n  _templateObject5 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\nwidth:100%;\\nheight:80%;\\npadding:2vw;\\nbackground-color:\", \";\\nborder: 1px solid rgba(255, 101, 132, 0.27);\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\nwidth:40%;\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\nwidth:50%;\\npadding:2vw 0;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  background-color:\", \";\\n  width: 100%;\\n  margin: 5vw 0;\\n  display:flex;\\n  justify-content: space-around;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { theme } from \"../../../config/colorTheme\";\nimport Prompt from \"../../commons/Prompt\";\nimport TextArea from \"../../commons/TextArea\";\nimport Hints from \"../../commons/help/hints/Hints\";\nconst Container = styled.div(_templateObject(), theme.lightGray);\nconst InputContainer = styled.div(_templateObject2());\nconst Preview = styled.div(_templateObject3());\nconst PreviewWrapper = styled.div(_templateObject4(), theme.accentColor20);\nconst PromptHelpContainer = styled.div(_templateObject5());\nconst PromptWrapper = styled.div(_templateObject6());\nconst HelpWrapper = styled.div(_templateObject7());\nconst promptChoices = [\"Write a short story about an imaginery future scenario.\", \"Write how an elderly person would use this object.\", \"How would you interact with this space if it could understand you?\"];\nconst promptInstruction = \"Here are few example prompts you can choose from...\";\nconst startingLineChoices = [\"Once upon a time in the year 2050\", \"Self checkout had never been easier thanks to ...\", \"The new Dream Kitchen enables people to...\"];\nconst startingLineInstruction = \"Here are few example starting lines you can choose from...\";\nexport default function NewPrompt(props) {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        promptText = _useState2[0],\n        setPromptText = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        startingLine = _useState4[0],\n        setStartingLine = _useState4[1];\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(InputContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(PromptHelpContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(PromptWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Prompt, {\n    marginTop: \"1vw\",\n    marginBottom: \"2vw\",\n    text: \"What do you want others to tell you about their dream \" + props.topicName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), React.createElement(HelpWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Hints, {\n    instruction: promptInstruction,\n    choices: promptChoices,\n    onSelect: value => {\n      setPromptText(value);\n      props.onPromptChange(props.index, {\n        text: value,\n        startingLine: startingLine\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }))), React.createElement(TextArea, {\n    rows: 4,\n    value: props.promptText,\n    onChangeCallback: ev => {\n      setPromptText(ev.target.value);\n      props.onPromptChange(props.index, {\n        text: ev.target.value,\n        startingLine: startingLine\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(PromptHelpContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(PromptWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Prompt, {\n    marginTop: \"3vw\",\n    marginBottom: \"2vw\",\n    text: \"How would you like othes to start their response\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  })), React.createElement(TextArea, {\n    rows: 2,\n    value: props.startingLine,\n    onChangeCallback: ev => {\n      setStartingLine(ev.target.value);\n      props.onPromptChange(props.index, {\n        text: promptText,\n        startingLine: ev.target.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(HelpWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Hints, {\n    instruction: startingLineInstruction,\n    choices: startingLineChoices,\n    onSelect: value => {\n      setStartingLine(value);\n      props.onPromptChange(props.index, {\n        text: promptText,\n        startingLine: value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  })))), React.createElement(Preview, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(Prompt, {\n    isSmall: true,\n    marginTop: \"3vw\",\n    marginBottom: \"1vw\",\n    text: \"A preview of how others will see this prompt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }), React.createElement(PreviewWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(Prompt, {\n    isDisabled: true,\n    marginBottom: \"2vw\",\n    text: promptText ? promptText : \"<Your prompt goes here>\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }), React.createElement(TextArea, {\n    isDisabled: true,\n    rows: 9,\n    value: startingLine ? startingLine + \"...\" : \"<Your starting line goes here>\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/piyum/Desktop/tempfolder/frontend_dreamcollective/src/components/views/createTopic/NewPrompt.js"],"names":["React","useState","styled","theme","Prompt","TextArea","Hints","Container","div","lightGray","InputContainer","Preview","PreviewWrapper","accentColor20","PromptHelpContainer","PromptWrapper","HelpWrapper","promptChoices","promptInstruction","startingLineChoices","startingLineInstruction","NewPrompt","props","promptText","setPromptText","startingLine","setStartingLine","topicName","value","onPromptChange","index","text","ev","target"],"mappings":"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","sourcesContent":["import React, { useState }  from \"react\";\nimport styled from \"styled-components\";\nimport {theme} from \"../../../config/colorTheme\";\nimport Prompt from \"../../commons/Prompt\"\nimport TextArea from \"../../commons/TextArea\"\nimport Hints from \"../../commons/help/hints/Hints\"\n\n\nconst Container= styled.div`\n  background-color:${theme.lightGray};\n  width: 100%;\n  margin: 5vw 0;\n  display:flex;\n  justify-content: space-around;\n`;\n\nconst InputContainer = styled.div`\nwidth:50%;\npadding:2vw 0;\n`;\n\nconst Preview = styled.div`\nwidth:40%;\n`;\n\nconst PreviewWrapper = styled.div`\nwidth:100%;\nheight:80%;\npadding:2vw;\nbackground-color:${theme.accentColor20};\nborder: 1px solid rgba(255, 101, 132, 0.27);\n`;\n\nconst PromptHelpContainer = styled.div`\nwidth:100%;\nposition:relative;\n`;\n \nconst PromptWrapper =  styled.div`\nwidth:90%;\n`;\n\nconst HelpWrapper =  styled.div`\nwidth:10%;\n`;\n\nconst promptChoices = [\n  \"Write a short story about an imaginery future scenario.\",\n  \"Write how an elderly person would use this object.\",\n  \"How would you interact with this space if it could understand you?\",\n];\n\nconst promptInstruction = \"Here are few example prompts you can choose from...\"\n\n\nconst startingLineChoices = [\n  \"Once upon a time in the year 2050\",\n  \"Self checkout had never been easier thanks to ...\",\n  \"The new Dream Kitchen enables people to...\",\n];\n\nconst startingLineInstruction = \"Here are few example starting lines you can choose from...\";\n\n\nexport default function NewPrompt(props){\n\n  const [promptText, setPromptText] = useState(\"\");\n  const [startingLine, setStartingLine] = useState(\"\");\n\n    return (\n      <Container>\n        <InputContainer>\n          <PromptHelpContainer>\n            <PromptWrapper>\n              <Prompt\n                marginTop={\"1vw\"}\n                marginBottom={\"2vw\"}\n                text={\n                  \"What do you want others to tell you about their dream \" +\n                  props.topicName\n                }\n              ></Prompt>\n            </PromptWrapper>\n            <HelpWrapper>\n              <Hints\n                instruction={promptInstruction}\n                choices={promptChoices}\n                onSelect={(value) => {\n                  setPromptText(value);\n                  props.onPromptChange(props.index, {\n                    text: value,\n                    startingLine: startingLine,\n                  });\n                }}\n              ></Hints>\n            </HelpWrapper>\n          </PromptHelpContainer>\n          <TextArea\n            rows={4}\n            value={props.promptText}\n            onChangeCallback={(ev) => {\n              setPromptText(ev.target.value);\n              props.onPromptChange(props.index, {\n                text: ev.target.value,\n                startingLine: startingLine,\n              });\n            }}\n          ></TextArea>\n\n          <PromptHelpContainer>\n            <PromptWrapper>\n              <Prompt\n                marginTop={\"3vw\"}\n                marginBottom={\"2vw\"}\n                text={\"How would you like othes to start their response\"}\n              ></Prompt>\n            </PromptWrapper>\n            <TextArea\n              rows={2}\n              value={props.startingLine}\n              onChangeCallback={(ev) => {\n                setStartingLine(ev.target.value);\n                props.onPromptChange(props.index, {\n                  text: promptText,\n                  startingLine: ev.target.value,\n                });\n              }}\n            ></TextArea>\n            <HelpWrapper>\n              <Hints\n                instruction={startingLineInstruction}\n                choices={startingLineChoices}\n                onSelect={(value) => {\n                  setStartingLine(value);\n                  props.onPromptChange(props.index, {\n                    text: promptText,\n                    startingLine: value,\n                  });\n                }}\n              ></Hints>\n            </HelpWrapper>\n          </PromptHelpContainer>\n        </InputContainer>\n        <Preview>\n          <Prompt\n            isSmall={true}\n            marginTop={\"3vw\"}\n            marginBottom={\"1vw\"}\n            text={\"A preview of how others will see this prompt\"}\n          ></Prompt>\n          <PreviewWrapper>\n            <Prompt\n              isDisabled={true}\n              marginBottom={\"2vw\"}\n              text={promptText ? promptText : \"<Your prompt goes here>\"}\n            ></Prompt>\n            <TextArea\n              isDisabled={true}\n              rows={9}\n              value={\n                startingLine\n                  ? startingLine + \"...\"\n                  : \"<Your starting line goes here>\"\n              }\n            ></TextArea>\n          </PreviewWrapper>\n        </Preview>\n      </Container>\n    );\n        \n}\n"]},"metadata":{},"sourceType":"module"}