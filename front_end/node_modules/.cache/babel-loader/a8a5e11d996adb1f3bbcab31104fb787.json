{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nimport { r as registerInstance, h } from './index-39969785.js';\nimport { Logger, filenameToContentType, I18n } from '@aws-amplify/core';\nimport { A as AccessLevel } from './storage-types-f257c0f2.js';\nimport '@aws-amplify/auth';\nimport { T as Translations } from './Translations-392acb9b.js';\nimport { e as NO_STORAGE_MODULE_FOUND } from './constants-d1abe7de.js';\nimport { Storage } from '@aws-amplify/storage';\nimport { i as imageFileType, c as calcKey, p as putStorageObject } from './storage-helpers-1c8a0f88.js'; // Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\n\nfunction rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}\n\nvar REGEX = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0; // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nvar amplifyS3AlbumCss = \":host{--overlay-bg-color:rgba(0, 0, 0, 0.15)}.album-container{-webkit-box-sizing:border-box;box-sizing:border-box;max-width:100%;margin:0 auto;padding:0 2rem}.grid-row{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin:-1rem -1rem;padding-bottom:3rem}.grid-item{position:relative;-ms-flex:1 0 22rem;flex:1 0 22rem;-ms-flex-positive:1;flex-grow:1;margin:1rem;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center}amplify-s3-image{--width:22rem;--height:20rem;border-radius:5px;-o-object-fit:cover;object-fit:cover}.img-overlay{display:none;width:100%;height:21rem;position:absolute;top:0;left:0;background-color:var(--overlay-bg-color)}.grid-item:hover .img-overlay{display:block}\";\nvar logger = new Logger('S3Album');\n\nvar AmplifyS3Album =\n/** @class */\nfunction () {\n  function class_1(hostRef) {\n    var _this = this;\n\n    registerInstance(this, hostRef);\n    /** The content type header used when uploading to S3 */\n\n    this.contentType = 'binary/octet-stream';\n    /** The access level of the files */\n\n    this.level = AccessLevel.Public;\n    /** Boolean to enable or disable picker */\n\n    this.picker = true;\n    /** Picker button text */\n\n    this.pickerText = Translations.PICKER_TEXT;\n    this.albumItems = [];\n    this.imgArr = {};\n\n    this.list = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _a, _b, path, level, track, identityId, data, error_1;\n\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              _a = this, _b = _a.path, path = _b === void 0 ? '' : _b, level = _a.level, track = _a.track, identityId = _a.identityId;\n              logger.debug('Album path: ' + path);\n\n              if (!Storage || typeof Storage.list !== 'function') {\n                throw new Error(NO_STORAGE_MODULE_FOUND);\n              }\n\n              _c.label = 1;\n\n            case 1:\n              _c.trys.push([1, 3,, 4]);\n\n              return [4\n              /*yield*/\n              , Storage.list(path, {\n                level: level,\n                track: track,\n                identityId: identityId\n              })];\n\n            case 2:\n              data = _c.sent();\n              this.marshal(data);\n              return [3\n              /*break*/\n              , 4];\n\n            case 3:\n              error_1 = _c.sent();\n              logger.warn(error_1);\n              return [3\n              /*break*/\n              , 4];\n\n            case 4:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    this.marshal = function (list) {\n      list.forEach(function (item) {\n        var name = item.key.toLowerCase();\n        var ext = name.split('.')[1];\n\n        if (imageFileType.has(ext)) {\n          if (!item.contentType || item.contentType && item.contentType === 'binary/octet-stream') {\n            item.contentType = _this.getContentType(item);\n          }\n        }\n      });\n      var filtered = list.filter(function (item) {\n        return item.contentType && item.contentType.startsWith('image/');\n      });\n      var items = _this.filter ? _this.filter(filtered) : filtered;\n      items = _this.sort ? _this.sort(items) : items;\n      _this.albumItems = items;\n      logger.debug('album items', _this.albumItems);\n\n      _this.constructImgArray(_this.albumItems);\n    };\n\n    this.constructImgArray = function (list) {\n      list.map(function (item) {\n        _this.imgArr[\"\" + item['key']] = item['key'];\n      });\n    };\n\n    this.handlePick = function (event) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var file, _a, _b, path, level, track, fileToKey, key, error_2, filtered;\n\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              file = event.target.files[0];\n              _a = this, _b = _a.path, path = _b === void 0 ? '' : _b, level = _a.level, track = _a.track, fileToKey = _a.fileToKey;\n              key = path + calcKey(file, fileToKey);\n              _c.label = 1;\n\n            case 1:\n              _c.trys.push([1, 3,, 4]);\n\n              return [4\n              /*yield*/\n              , putStorageObject(key, file, level, track, file['type'], logger)];\n\n            case 2:\n              _c.sent();\n\n              return [3\n              /*break*/\n              , 4];\n\n            case 3:\n              error_2 = _c.sent();\n              logger.error(error_2);\n              throw new Error(error_2);\n\n            case 4:\n              if (Object.keys(this.imgArr).includes(key)) {\n                this.albumItems = __spreadArrays(this.albumItems);\n                this.imgArr[key] = key + \"-\" + v4();\n              } else {\n                filtered = __spreadArrays(this.albumItems, this.filter ? this.filter([{\n                  key: key\n                }]) : [{\n                  key: key\n                }]);\n                this.albumItems = this.sort ? this.sort(filtered) : filtered;\n              }\n\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n  }\n\n  class_1.prototype.getContentType = function (item) {\n    return filenameToContentType(item.key, 'image/*');\n  };\n\n  class_1.prototype.componentWillLoad = function () {\n    this.list();\n  };\n\n  class_1.prototype.render = function () {\n    var _this = this;\n\n    return h(\"div\", null, h(\"div\", {\n      class: \"album-container\"\n    }, h(\"div\", {\n      class: \"grid-row\"\n    }, this.albumItems.map(function (item) {\n      return h(\"div\", {\n        class: \"grid-item\",\n        key: \"key-\" + item.key\n      }, h(\"amplify-s3-image\", {\n        key: _this.imgArr[item.key],\n        imgKey: item.key,\n        level: _this.level,\n        path: _this.path,\n        identityId: _this.identityId,\n        track: _this.track,\n        handleOnError: _this.handleOnError,\n        handleOnLoad: _this.handleOnLoad\n      }), h(\"span\", {\n        class: \"img-overlay\"\n      }));\n    }))), this.picker && h(\"amplify-picker\", {\n      pickerText: I18n.get(this.pickerText),\n      inputHandler: function (e) {\n        return _this.handlePick(e);\n      },\n      acceptValue: \"image/*\"\n    }));\n  };\n\n  return class_1;\n}();\n\nAmplifyS3Album.style = amplifyS3AlbumCss;\nexport { AmplifyS3Album as amplify_s3_album };","map":null,"metadata":{},"sourceType":"module"}