{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { r as registerInstance, h, H as Host } from './index-39969785.js';\nimport { Logger, I18n } from '@aws-amplify/core';\nimport { A as AccessLevel } from './storage-types-f257c0f2.js';\nimport '@aws-amplify/auth';\nimport { T as Translations } from './Translations-392acb9b.js';\nimport './constants-d1abe7de.js';\nimport '@aws-amplify/storage';\nimport { c as calcKey, p as putStorageObject, g as getStorageObject } from './storage-helpers-1c8a0f88.js';\nvar logger = new Logger('S3ImagePicker');\n\nvar AmplifyS3ImagePicker =\n/** @class */\nfunction () {\n  function class_1(hostRef) {\n    var _this = this;\n\n    registerInstance(this, hostRef);\n    /** The content type header used when uploading to S3 */\n\n    this.contentType = 'binary/octet-stream';\n    /** The access level of the image */\n\n    this.level = AccessLevel.Public;\n    /** Title string value */\n\n    this.headerTitle = Translations.IMAGE_PICKER_TITLE;\n    /** Header Hint value in string */\n\n    this.headerHint = Translations.IMAGE_PICKER_HINT;\n    /** Placeholder hint that goes under the placeholder image */\n\n    this.placeholderHint = Translations.IMAGE_PICKER_PLACEHOLDER_HINT;\n    /** Upload Button Text as string */\n\n    this.buttonText = Translations.IMAGE_PICKER_BUTTON_TEXT;\n\n    this.handlePick = function (file) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _a, _b, path, level, track, identityId, fileToKey, key, _c, error_1;\n\n        return __generator(this, function (_d) {\n          switch (_d.label) {\n            case 0:\n              _a = this, _b = _a.path, path = _b === void 0 ? '' : _b, level = _a.level, track = _a.track, identityId = _a.identityId, fileToKey = _a.fileToKey;\n              key = path + calcKey(file, fileToKey);\n              _d.label = 1;\n\n            case 1:\n              _d.trys.push([1, 4,, 5]);\n\n              return [4\n              /*yield*/\n              , putStorageObject(key, file, level, track, file['type'], logger)];\n\n            case 2:\n              _d.sent();\n\n              _c = this;\n              return [4\n              /*yield*/\n              , getStorageObject(key, level, track, identityId, logger)];\n\n            case 3:\n              _c.src = _d.sent();\n              return [3\n              /*break*/\n              , 5];\n\n            case 4:\n              error_1 = _d.sent();\n              logger.error(error_1);\n              throw new Error(error_1);\n\n            case 5:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n  }\n\n  class_1.prototype.render = function () {\n    return h(Host, null, h(\"slot\", {\n      name: \"photo-picker\"\n    }, h(\"amplify-photo-picker\", {\n      previewSrc: this.src,\n      handleClick: this.handlePick,\n      headerTitle: I18n.get(this.headerTitle),\n      headerHint: I18n.get(this.headerHint),\n      placeholderHint: I18n.get(this.placeholderHint),\n      buttonText: I18n.get(this.buttonText)\n    })));\n  };\n\n  return class_1;\n}();\n\nexport { AmplifyS3ImagePicker as amplify_s3_image_picker };","map":null,"metadata":{},"sourceType":"module"}