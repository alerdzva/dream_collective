{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { e as NO_STORAGE_MODULE_FOUND } from './constants-d1abe7de.js';\nimport { Storage } from '@aws-amplify/storage';\nvar imageFileType = new Set(['apng', 'bmp', 'gif', 'ico', 'cur', 'jpg', 'jpeg', 'jfif', 'pjpeg', 'pjp', 'png', 'svg', 'tif', 'tiff', 'webp']);\n\nvar calcKey = function (file, fileToKey) {\n  var name = file.name,\n      size = file.size,\n      type = file.type;\n  var key = encodeURI(name);\n\n  if (fileToKey) {\n    if (typeof fileToKey === 'string') {\n      key = fileToKey;\n    } else if (typeof fileToKey === 'function') {\n      key = fileToKey({\n        name: name,\n        size: size,\n        type: type\n      });\n    } else {\n      key = encodeURI(JSON.stringify(fileToKey));\n    }\n\n    if (!key) {\n      key = 'empty_key';\n    }\n  }\n\n  return key.replace(/\\s/g, '_');\n};\n\nvar getStorageObject = function (key, level, track, identityId, logger) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var src, error_1;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (!Storage || typeof Storage.get !== 'function') {\n            throw new Error(NO_STORAGE_MODULE_FOUND);\n          }\n\n          _a.label = 1;\n\n        case 1:\n          _a.trys.push([1, 3,, 4]);\n\n          return [4\n          /*yield*/\n          , Storage.get(key, {\n            level: level,\n            track: track,\n            identityId: identityId\n          })];\n\n        case 2:\n          src = _a.sent();\n          logger.debug('Storage image get', src);\n          return [2\n          /*return*/\n          , src];\n\n        case 3:\n          error_1 = _a.sent();\n          throw new Error(error_1);\n\n        case 4:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n};\n\nvar readFileAsync = function (blob) {\n  return new Promise(function (resolve, reject) {\n    var reader = new FileReader();\n\n    reader.onload = function () {\n      resolve(reader.result);\n    };\n\n    reader.onerror = function () {\n      reject('Failed to read file!');\n      reader.abort();\n    };\n\n    reader.readAsText(blob);\n  });\n};\n\nvar getTextSource = function (key, level, track, identityId, logger) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var textSrc, text, error_2;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (!Storage || typeof Storage.get !== 'function') {\n            throw new Error(NO_STORAGE_MODULE_FOUND);\n          }\n\n          _a.label = 1;\n\n        case 1:\n          _a.trys.push([1, 4,, 5]);\n\n          return [4\n          /*yield*/\n          , Storage.get(key, {\n            download: true,\n            level: level,\n            track: track,\n            identityId: identityId\n          })];\n\n        case 2:\n          textSrc = _a.sent();\n          logger.debug(textSrc);\n          return [4\n          /*yield*/\n          , readFileAsync(textSrc['Body'])];\n\n        case 3:\n          text = _a.sent();\n          return [2\n          /*return*/\n          , text];\n\n        case 4:\n          error_2 = _a.sent();\n          throw new Error(error_2);\n\n        case 5:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n};\n\nvar putStorageObject = function (key, body, level, track, contentType, logger) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, error_3;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (!Storage || typeof Storage.put !== 'function') {\n            throw new Error(NO_STORAGE_MODULE_FOUND);\n          }\n\n          _a.label = 1;\n\n        case 1:\n          _a.trys.push([1, 3,, 4]);\n\n          return [4\n          /*yield*/\n          , Storage.put(key, body, {\n            contentType: contentType,\n            level: level,\n            track: track\n          })];\n\n        case 2:\n          data = _a.sent();\n          logger.debug('Upload data', data);\n          return [3\n          /*break*/\n          , 4];\n\n        case 3:\n          error_3 = _a.sent();\n          throw new Error(error_3);\n\n        case 4:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n};\n\nexport { getTextSource as a, calcKey as c, getStorageObject as g, imageFileType as i, putStorageObject as p };","map":null,"metadata":{},"sourceType":"module"}