{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { r as registerInstance, h } from './index-39969785.js';\nimport { Logger, I18n } from '@aws-amplify/core';\nimport { M as MfaOption } from './auth-types-78df304e.js';\nimport { Auth } from '@aws-amplify/auth';\nimport { T as Translations } from './Translations-392acb9b.js';\nimport { N as NO_AUTH_MODULE_FOUND, f as USER_NOT_SETUP_SOFTWARE_TOKEN_MFA, g as USER_NOT_VERIFIED_SOFTWARE_TOKEN_MFA } from './constants-d1abe7de.js';\nvar logger = new Logger('SelectMFAType');\n\nvar AmplifySelectMFAType =\n/** @class */\nfunction () {\n  function class_1(hostRef) {\n    var _this = this;\n\n    registerInstance(this, hostRef);\n    /** Fires when Verify is clicked */\n\n    this.handleSubmit = function (event) {\n      return _this.verify(event);\n    };\n\n    this.TOTPSetup = false;\n    this.selectMessage = null;\n    this.MFAMethod = null;\n    this.isTOTP = false;\n    this.isNoMFA = false;\n    this.isSMS = false;\n    this.loading = false;\n  }\n\n  class_1.prototype.handleRadioButtonChange = function (event) {\n    this.TOTPSetup = false;\n    this.selectMessage = null; // Reseting state values to default\n\n    this.isNoMFA = false;\n    this.isTOTP = false;\n    this.isSMS = false;\n    var _a = event.target,\n        value = _a.value,\n        type = _a.type,\n        checked = _a.checked;\n    var checkType = ['radio', 'checkbox'].includes(type);\n\n    if (value === MfaOption.SMS && checkType) {\n      this.isSMS = checked;\n    }\n\n    if (value === MfaOption.TOTP && checkType) {\n      this.isTOTP = checked;\n    }\n\n    if (value === MfaOption.NOMFA && checkType) {\n      this.isNoMFA = checked;\n    }\n  };\n\n  class_1.prototype.verify = function (event) {\n    return __awaiter(this, void 0, void 0, function () {\n      var user, preferredMFAData, error_1, message;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // avoid submitting the form\n            if (event) {\n              event.preventDefault();\n            }\n\n            logger.debug('MFA Type Values', {\n              TOTP: this.isTOTP,\n              SMS: this.isSMS,\n              'No MFA': this.isNoMFA\n            });\n\n            if (this.isTOTP) {\n              this.MFAMethod = MfaOption.TOTP;\n            } else if (this.isSMS) {\n              this.MFAMethod = MfaOption.SMS;\n            } else if (this.isNoMFA) {\n              this.MFAMethod = MfaOption.NOMFA;\n            }\n\n            user = this.authData;\n\n            if (!Auth || typeof Auth.setPreferredMFA !== 'function') {\n              throw new Error(NO_AUTH_MODULE_FOUND);\n            }\n\n            this.loading = true;\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3, 4, 5]);\n\n            return [4\n            /*yield*/\n            , Auth.setPreferredMFA(user, this.MFAMethod)];\n\n          case 2:\n            preferredMFAData = _a.sent();\n            logger.debug('Set Preferred MFA Succeeded', preferredMFAData);\n            this.selectMessage = I18n.get(Translations.SUCCESS_MFA_TYPE) + \" \" + this.MFAMethod;\n            return [3\n            /*break*/\n            , 5];\n\n          case 3:\n            error_1 = _a.sent();\n            message = error_1.message;\n\n            if (message === USER_NOT_SETUP_SOFTWARE_TOKEN_MFA || message === USER_NOT_VERIFIED_SOFTWARE_TOKEN_MFA) {\n              this.TOTPSetup = true;\n              this.selectMessage = I18n.get(Translations.SETUP_TOTP_REQUIRED); // \tTODO Add Toast = showToast: true,\n            } else {\n              logger.debug('Set Preferred MFA failed', error_1);\n              this.selectMessage = I18n.get(Translations.UNABLE_TO_SETUP_MFA_AT_THIS_TIME); // \tTODO Add Toast = showToast: true,\n            }\n\n            return [3\n            /*break*/\n            , 5];\n\n          case 4:\n            this.loading = false;\n            return [7\n            /*endfinally*/\n            ];\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  class_1.prototype.contentBuilder = function () {\n    var _this = this;\n\n    if (!this.MFATypes || Object.keys(this.MFATypes).length < 2) {\n      logger.debug(I18n.get(Translations.LESS_THAN_TWO_MFA_VALUES_MESSAGE));\n      return h(\"div\", null, h(\"a\", null, I18n.get(Translations.LESS_THAN_TWO_MFA_VALUES_MESSAGE)));\n    }\n\n    var _a = this.MFATypes,\n        SMS = _a.SMS,\n        TOTP = _a.TOTP,\n        Optional = _a.Optional;\n    return (// TODO: Add Toast messages\n      h(\"amplify-form-section\", {\n        submitButtonText: I18n.get(Translations.SELECT_MFA_TYPE_SUBMIT_BUTTON_TEXT),\n        headerText: I18n.get(Translations.SELECT_MFA_TYPE_HEADER_TEXT),\n        handleSubmit: function (event) {\n          return _this.handleSubmit(event);\n        },\n        loading: this.loading\n      }, SMS ? h(\"amplify-radio-button\", {\n        key: \"sms\",\n        name: \"MFAType\",\n        value: \"SMS\",\n        label: \"SMS\",\n        handleInputChange: function (event) {\n          return _this.handleRadioButtonChange(event);\n        }\n      }) : null, TOTP ? h(\"amplify-radio-button\", {\n        key: \"totp\",\n        name: \"MFAType\",\n        value: \"TOTP\",\n        label: \"TOTP\",\n        handleInputChange: function (event) {\n          return _this.handleRadioButtonChange(event);\n        }\n      }) : null, Optional ? h(\"amplify-radio-button\", {\n        key: \"noMFA\",\n        name: \"MFAType\",\n        value: \"NOMFA\",\n        label: \"No MFA\",\n        handleInputChange: function (event) {\n          return _this.handleRadioButtonChange(event);\n        }\n      }) : null)\n    );\n  };\n\n  class_1.prototype.render = function () {\n    return h(\"div\", null, this.contentBuilder(), this.TOTPSetup ? h(\"amplify-totp-setup\", {\n      user: this.authData\n    }) : null);\n  };\n\n  return class_1;\n}();\n\nexport { AmplifySelectMFAType as amplify_select_mfa_type };","map":null,"metadata":{},"sourceType":"module"}