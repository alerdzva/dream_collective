{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { r as registerInstance, h } from './index-39969785.js';\nimport { ConsoleLogger, I18n } from '@aws-amplify/core';\nimport { A as AuthState } from './auth-types-78df304e.js';\nimport { Auth } from '@aws-amplify/auth';\nimport { T as Translations } from './Translations-392acb9b.js';\nimport { N as NO_AUTH_MODULE_FOUND, j as AUTH_SOURCE_KEY } from './constants-d1abe7de.js';\nimport { d as dispatchAuthStateChangeEvent } from './helpers-01ecf5f9.js';\nvar logger = new ConsoleLogger('amplify-amazon-button');\n\nvar AmplifyAmazonButton =\n/** @class */\nfunction () {\n  function class_1(hostRef) {\n    var _this = this;\n\n    registerInstance(this, hostRef);\n    /** Auth state change handler for this component\n     * e.g. SignIn -> 'Create Account' link -> SignUp\n     */\n\n    this.handleAuthStateChange = dispatchAuthStateChangeEvent;\n\n    this.federatedSignIn = function (response) {\n      var access_token = response.access_token,\n          expires_in = response.expires_in;\n\n      if (!access_token) {\n        return;\n      }\n\n      if (!Auth || typeof Auth.federatedSignIn !== 'function' || typeof Auth.currentAuthenticatedUser !== 'function') {\n        throw new Error(NO_AUTH_MODULE_FOUND);\n      }\n\n      var date = new Date();\n      var expires_at = expires_in * 1000 + date.getTime();\n      window['amazon'].Login.retrieveProfile(function (userInfo) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var user, authenticatedUser;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                if (!userInfo.success) {\n                  return [2\n                  /*return*/\n                  , logger.debug('Get user Info failed')];\n                }\n\n                user = {\n                  name: userInfo.profile.Name,\n                  email: userInfo.profile.PrimaryEmail\n                };\n                return [4\n                /*yield*/\n                , Auth.federatedSignIn('amazon', {\n                  token: access_token,\n                  expires_at: expires_at\n                }, user)];\n\n              case 1:\n                _a.sent();\n\n                return [4\n                /*yield*/\n                , Auth.currentAuthenticatedUser()];\n\n              case 2:\n                authenticatedUser = _a.sent();\n                this.handleAuthStateChange(AuthState.SignedIn, authenticatedUser);\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      });\n    };\n  }\n  /**\n   * @see https://developer.amazon.com/docs/login-with-amazon/install-sdk-javascript.html\n   */\n\n\n  class_1.prototype.signInWithAmazon = function (event) {\n    var _this = this;\n\n    event.preventDefault();\n    window['amazon'].Login.setClientId(this.clientId);\n    window['amazon'].Login.authorize({\n      scope: 'profile'\n    }, function (response) {\n      if (response.error) {\n        return logger.debug('Failed to login with amazon: ' + response.error);\n      }\n\n      try {\n        window.localStorage.setItem(AUTH_SOURCE_KEY, JSON.stringify({\n          provider: 'amazon'\n        }));\n      } catch (e) {\n        logger.debug('Failed to cache auth source into localStorage', e);\n      }\n\n      _this.federatedSignIn(response);\n    });\n  };\n\n  class_1.prototype.render = function () {\n    var _this = this;\n\n    return h(\"amplify-sign-in-button\", {\n      onClick: function (event) {\n        return _this.signInWithAmazon(event);\n      },\n      provider: \"amazon\"\n    }, h(\"script\", {\n      src: \"https://assets.loginwithamazon.com/sdk/na/login1.js\"\n    }), I18n.get(Translations.SIGN_IN_WITH_AMAZON));\n  };\n\n  return class_1;\n}();\n\nvar logger$1 = new ConsoleLogger('amplify-auth0-button');\n\nvar AmplifyAuth0Button =\n/** @class */\nfunction () {\n  function class_2(hostRef) {\n    var _this = this;\n\n    registerInstance(this, hostRef);\n    /** Auth state change handler for this component */\n\n    this.handleAuthStateChange = dispatchAuthStateChangeEvent;\n\n    this.handleLoad = function () {\n      // @ts-ignore Property 'auth0' does not exist on type '{}'.\n      var _a = Auth.configure().oauth,\n          oauth = _a === void 0 ? {} : _a; // @ts-ignore Property 'auth0' does not exist on type '{}'.\n\n      var _b = _this.config,\n          config = _b === void 0 ? oauth.auth0 : _b;\n\n      if (!config) {\n        logger$1.debug('Auth0 is not configured');\n        return;\n      }\n\n      logger$1.debug('auth0 configuration', config);\n\n      if (!_this._auth0) {\n        _this._auth0 = new window['auth0'].WebAuth(config);\n      }\n\n      _this._auth0.parseHash(function (err, authResult) {\n        if (err) {\n          logger$1.debug('Failed to parse the url for Auth0', err);\n          return;\n        }\n\n        if (!authResult) {\n          logger$1.debug('Auth0 found no authResult in hash');\n          return;\n        }\n\n        var payload = {\n          provider: 'auth0',\n          opts: {\n            returnTo: config.returnTo,\n            clientID: config.clientID,\n            federated: config.federated\n          }\n        };\n\n        try {\n          localStorage.setItem(AUTH_SOURCE_KEY, JSON.stringify(payload));\n        } catch (e) {\n          logger$1.debug('Failed to cache auth source into localStorage', e);\n        }\n\n        _this._auth0.client.userInfo(authResult.accessToken, function (err, user) {\n          return __awaiter(_this, void 0, void 0, function () {\n            var username, email, authenticatedUser;\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  username = undefined;\n                  email = undefined;\n\n                  if (err) {\n                    logger$1.debug('Failed to get the user info', err);\n                  } else {\n                    username = user.name;\n                    email = user.email;\n                  }\n\n                  return [4\n                  /*yield*/\n                  , Auth.federatedSignIn(config.domain, {\n                    token: authResult.idToken,\n                    expires_at: authResult.expiresIn * 1000 + new Date().getTime()\n                  }, {\n                    name: username,\n                    email: email\n                  })];\n\n                case 1:\n                  _a.sent();\n\n                  return [4\n                  /*yield*/\n                  , Auth.currentAuthenticatedUser()];\n\n                case 2:\n                  authenticatedUser = _a.sent();\n                  this.handleAuthStateChange(AuthState.SignedIn, authenticatedUser);\n                  return [2\n                  /*return*/\n                  ];\n              }\n            });\n          });\n        });\n      });\n    };\n  }\n\n  class_2.prototype.signInWithAuth0 = function (event) {\n    event.preventDefault();\n\n    if (!this._auth0) {\n      throw new Error('the auth0 client is not configured');\n    }\n\n    this._auth0.authorize();\n  };\n\n  class_2.prototype.render = function () {\n    var _this = this;\n\n    return h(\"amplify-sign-in-button\", {\n      onClick: function (event) {\n        return _this.signInWithAuth0(event);\n      },\n      provider: \"auth0\"\n    }, h(\"script\", {\n      onLoad: this.handleLoad,\n      src: \"https://cdn.auth0.com/js/auth0/9.11/auth0.min.js\"\n    }), I18n.get(Translations.SIGN_IN_WITH_AUTH0));\n  };\n\n  return class_2;\n}();\n\nvar logger$2 = new ConsoleLogger('amplify-facebook-button');\n\nvar AmplifyFacebookButton =\n/** @class */\nfunction () {\n  function class_3(hostRef) {\n    var _this = this;\n\n    registerInstance(this, hostRef);\n    /** Auth state change handler for this component\n     * e.g. SignIn -> 'Create Account' link -> SignUp\n     */\n\n    this.handleAuthStateChange = dispatchAuthStateChangeEvent;\n\n    this.federatedSignIn = function (authResponse) {\n      var accessToken = authResponse.accessToken,\n          expiresIn = authResponse.expiresIn;\n\n      if (!accessToken) {\n        return;\n      }\n\n      if (!Auth || typeof Auth.federatedSignIn !== 'function' || typeof Auth.currentAuthenticatedUser !== 'function') {\n        throw new Error(NO_AUTH_MODULE_FOUND);\n      }\n\n      var date = new Date();\n      var expires_at = expiresIn * 1000 + date.getTime();\n      var fields = 'name,email';\n      window['FB'].api('/me', {\n        fields: fields\n      }, function (response) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var user, authenticatedUser;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                user = {\n                  name: response.name,\n                  email: response.email\n                };\n                return [4\n                /*yield*/\n                , Auth.federatedSignIn('facebook', {\n                  token: accessToken,\n                  expires_at: expires_at\n                }, user)];\n\n              case 1:\n                _a.sent();\n\n                return [4\n                /*yield*/\n                , Auth.currentAuthenticatedUser()];\n\n              case 2:\n                authenticatedUser = _a.sent();\n                this.handleAuthStateChange(AuthState.SignedIn, authenticatedUser);\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      });\n    };\n\n    this.getLoginStatus = function () {\n      window['FB'].getLoginStatus(function (response) {\n        try {\n          window.localStorage.setItem(AUTH_SOURCE_KEY, JSON.stringify({\n            provider: 'facebook'\n          }));\n        } catch (e) {\n          logger$2.debug('Failed to cache auth source into localStorage', e);\n        }\n\n        if (response.status === 'connected') {\n          return _this.federatedSignIn(response.authResponse);\n        }\n\n        _this.login();\n      });\n    };\n\n    this.login = function () {\n      var scope = 'public_profile,email';\n      window['FB'].login(function (response) {\n        if (response && response.authResponse) {\n          _this.federatedSignIn(response.authResponse);\n        }\n      }, {\n        scope: scope\n      });\n    };\n  }\n  /**\n   * @see https://developers.facebook.com/docs/javascript/reference/FB.init/v5.0\n   */\n\n\n  class_3.prototype.signInWithFacebook = function (event) {\n    event.preventDefault();\n    window['FB'].init({\n      appId: this.appId,\n      cookie: true,\n      xfbml: false,\n      version: 'v5.0'\n    });\n    this.getLoginStatus();\n  };\n\n  class_3.prototype.render = function () {\n    var _this = this;\n\n    return h(\"amplify-sign-in-button\", {\n      onClick: function (event) {\n        return _this.signInWithFacebook(event);\n      },\n      provider: \"facebook\"\n    }, h(\"script\", {\n      async: true,\n      defer: true,\n      src: \"https://connect.facebook.net/en_US/sdk.js\"\n    }), I18n.get(Translations.SIGN_IN_WITH_FACEBOOK));\n  };\n\n  return class_3;\n}();\n\nvar logger$3 = new ConsoleLogger('amplify-google-button');\n\nvar AmplifyGoogleButton =\n/** @class */\nfunction () {\n  function class_4(hostRef) {\n    var _this = this;\n\n    registerInstance(this, hostRef);\n    /** Auth state change handler for this component\n     * e.g. SignIn -> 'Create Account' link -> SignUp\n     */\n\n    this.handleAuthStateChange = dispatchAuthStateChangeEvent;\n\n    this.handleError = function (error) {\n      console.error(error);\n    };\n    /**\n     * @see https://developers.google.com/identity/sign-in/web/build-button#building_a_button_with_a_custom_graphic\n     */\n\n\n    this.handleLoad = function () {\n      window['gapi'].load('auth2');\n    };\n\n    this.handleUser = function (user) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _a, id_token, expires_at, profile, authenticatedUser;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              if (!Auth || typeof Auth.federatedSignIn !== 'function' || typeof Auth.currentAuthenticatedUser !== 'function') {\n                throw new Error(NO_AUTH_MODULE_FOUND);\n              }\n\n              try {\n                window.localStorage.setItem(AUTH_SOURCE_KEY, JSON.stringify({\n                  provider: 'google'\n                }));\n              } catch (e) {\n                logger$3.debug('Failed to cache auth source into localStorage', e);\n              }\n\n              _a = user.getAuthResponse(), id_token = _a.id_token, expires_at = _a.expires_at;\n              profile = user.getBasicProfile();\n              return [4\n              /*yield*/\n              , Auth.federatedSignIn('google', {\n                token: id_token,\n                expires_at: expires_at\n              }, {\n                email: profile.getEmail(),\n                name: profile.getName(),\n                picture: profile.getImageUrl()\n              })];\n\n            case 1:\n              _b.sent();\n\n              return [4\n              /*yield*/\n              , Auth.currentAuthenticatedUser()];\n\n            case 2:\n              authenticatedUser = _b.sent();\n\n              try {\n                this.handleAuthStateChange(AuthState.SignedIn, authenticatedUser);\n              } catch (error) {\n                this.handleError(error);\n              }\n\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n  }\n\n  class_4.prototype.getAuthInstance = function () {\n    if (window['gapi'] && window['gapi'].auth2) {\n      return window['gapi'].auth2.getAuthInstance() || window['gapi'].auth2.init({\n        client_id: this.clientId,\n        cookiepolicy: 'single_host_origin',\n        scope: 'profile email openid'\n      });\n    }\n\n    return null;\n  };\n\n  class_4.prototype.signInWithGoogle = function (event) {\n    event.preventDefault();\n    this.getAuthInstance().signIn().then(this.handleUser).catch(this.handleError);\n  };\n\n  class_4.prototype.render = function () {\n    var _this = this;\n\n    return h(\"amplify-sign-in-button\", {\n      onClick: function (event) {\n        return _this.signInWithGoogle(event);\n      },\n      provider: \"google\"\n    }, h(\"script\", {\n      onLoad: this.handleLoad,\n      src: \"https://apis.google.com/js/api:client.js\"\n    }), I18n.get(Translations.SIGN_IN_WITH_GOOGLE));\n  };\n\n  return class_4;\n}();\n\nvar AmplifyOAuthButton =\n/** @class */\nfunction () {\n  function AmplifyOAuthButton(hostRef) {\n    registerInstance(this, hostRef);\n    /** Federated credentials & configuration. */\n\n    this.config = {};\n  }\n\n  AmplifyOAuthButton.prototype.signInWithOAuth = function (event) {\n    event.preventDefault();\n    Auth.federatedSignIn();\n  };\n\n  AmplifyOAuthButton.prototype.render = function () {\n    var _this = this;\n\n    return h(\"amplify-sign-in-button\", {\n      onClick: function (event) {\n        return _this.signInWithOAuth(event);\n      },\n      provider: \"oauth\"\n    }, this.config.label || I18n.get(Translations.SIGN_IN_WITH_AWS));\n  };\n\n  return AmplifyOAuthButton;\n}();\n\nexport { AmplifyAmazonButton as amplify_amazon_button, AmplifyAuth0Button as amplify_auth0_button, AmplifyFacebookButton as amplify_facebook_button, AmplifyGoogleButton as amplify_google_button, AmplifyOAuthButton as amplify_oauth_button };","map":null,"metadata":{},"sourceType":"module"}